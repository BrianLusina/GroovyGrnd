buildscript {
    ext.kotlin_version = '1.1.60'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: "java"
apply plugin: "idea"
apply plugin: "groovy"
apply plugin: "jacoco"
apply plugin: "kotlin"

jacoco {
    toolVersion = "0.7.8"
}

configurations { codacy }

allprojects {
    repositories {
        jcenter()
        maven { url "https://jitpack.io" }
        maven { url "http://dl.bintray.com/typesafe/maven-releases" }
    }
}


repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    //compile "joda-time:joda-time:2.3+"
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile group: 'org.spockframework', name: 'spock-core', version: '1.0-groovy-2.4'
    testCompile "com.google.guava:guava:16+"
    testCompile "junit:junit:4.12"
    testCompile "org.assertj:assertj-core:3.2.0"
    codacy 'com.github.codacy:codacy-coverage-reporter:-SNAPSHOT'
}



jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        xml.destination "${buildDir}/reports/jacoco/report.xml"
        html.enabled true
        csv.enabled false
    }
}

codeCoverageReport.dependsOn {
    subprojects*.test
}

task sendCoverageToCodacy(type: JavaExec, dependsOn: jacocoTestReport) {
    main = "com.codacy.CodacyCoverageReporter"
    classpath = configurations.codacy
    args = [
            "-l",
            "Java",
            "-r",
            "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
    ]
}

jar {
    baseName = 'javaplayground'
    version = "1.0"
}

ext {
    versionCode = 1
    versionName = "1.0"
}

